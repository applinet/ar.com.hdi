<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xe="http://www.ibm.com/xsp/coreex" xmlns:debug="http://www.openntf.org/xsp/debugtoolbar">
	<xp:this.data>
		<xp:dominoDocument var="documentPropuesta" formName="Propuesta"></xp:dominoDocument>
	</xp:this.data>
	<xp:this.resources>
		<xp:script src="/GeneralFunctions.jss" clientSide="false"></xp:script>
		<xp:script src="/JSS.Propuestas.jss" clientSide="false"></xp:script>
		<xp:script src="/JSS.veh.general.jss" clientSide="false"></xp:script>
		<xp:script src="/SJS.log.BE.v01.jss" clientSide="false"></xp:script>
		<xp:dojoModule name="extlib.dijit.Loading"></xp:dojoModule>
	</xp:this.resources>
	<!--
		Esto es para arreglar los dialog en Internet Explorer pero rompe las vistas iniciales <xp:this.beforeRenderResponse><![CDATA[#{javascript: if
		(context.getUserAgent().isIE()) { var response = facesContext.getExternalContext().getResponse(); response.setHeader("X-UA-Compatible", "IE=8");
		}}]]></xp:this.beforeRenderResponse>
	-->
	<xe:dialog id="dialogNuevaOperacion" title="Ingrese el tipo de operación" style="width:500px;">
		<xp:table style="width:100.0%">
			<xp:tr>
				<xp:td>
					<xp:messages id="messagesNuevaOperacion" style="margin-left:1.0%;margin-right:1.0%"></xp:messages>
				</xp:td>
			</xp:tr>
			<xp:tr>
				<xp:td>
					<xp:panel id="PNL_TipoOPeracion">
						<xp:comboBox id="sol_tipoMovimiento_cod">
							<xp:eventHandler event="onchange" submit="true" refreshMode="partial" refreshId="divSubTipoOperacion" id="eventHandler5">
								<xp:this.action><![CDATA[#{javascript:var tipoMovimiento:String = getComponent("sol_tipoMovimiento_cod").getValue();
viewScope.put("PNL_SubTipoOperacion",false);
viewScope.put("PNL_sol_poliza_nro", false);
switch(tipoMovimiento) {
    case "1": //NUEVA
		break;   
    case "3": //ENDOSO
    case "4": //ANULACION
    	viewScope.put("PNL_SubTipoOperacion",true);
		viewScope.put("PNL_sol_poliza_nro",true);        
		break;
	default: //RENOVACION o REHABILITACION
		viewScope.put("PNL_sol_poliza_nro",true);
		break;
}
}]]></xp:this.action>
							</xp:eventHandler>
							<xp:selectItem itemLabel="- Por favor Seleccione -"></xp:selectItem>
							<xp:selectItems id="selectItems_sol_articulo_cod">
								<xp:this.value><![CDATA[#{javascript:if(getIsGroupMember("spwAU.N3.COBR.USR_CRUD")){
	getOpcionesClave("GE_tipoMovimiento_Cobranzas_cod");
}else{
	getOpcionesClave("GE_tipoMovimiento_cod");
}}]]></xp:this.value>
							</xp:selectItems>
						</xp:comboBox>
					</xp:panel>
				</xp:td>
			</xp:tr>
			<xp:tr>
				<xp:td>
					<xp:div id="divSubTipoOperacion">
						<xp:panel id="PNL_SubTipoOperacion">
							<xp:this.rendered><![CDATA[#{javascript:viewScope.get("PNL_SubTipoOperacion")}]]></xp:this.rendered>
							<xp:table>
								<xp:tr>
									<xp:td>
										<xp:label value="Operación:  " id="Label_Operacion" style="font-weight:bold" for="sol_tipoOperacion_cod" />
									</xp:td>
									<xp:td>
										<xp:comboBox id="sol_tipoOperacion_cod">
											<xp:selectItem itemLabel="- Por favor Seleccione -" id="selectItem1"></xp:selectItem>
											<xp:selectItems id="selectItems1">
												<xp:this.value><![CDATA[#{javascript:importPackage(ar.com.hdi.autos.connect);
var jce:GetArrayFromQueryAS400 = new GetArrayFromQueryAS400();
var doc:NotesDocument = currentDocument.getDocument();
doc.appendItemValue("sol_tipoMovimiento_cod", getComponent("sol_tipoMovimiento_cod").getValue());
var arrResult:java.util.ArrayList = jce.getSelectAS("solTB_SET901", doc);
if (getComponent("sol_tipoMovimiento_cod").getValue() == "4"){ //Solo para Anulaciones
	if(getIsGroupMember("spwAU.N3.COBR.USR_CRUD")){
		var strTemp:String = arrResult.get(0);
		arrResult.clear();
		arrResult.add(strTemp);
	}else{
		arrResult.remove(0);
	}
}
arrResult;}]]></xp:this.value>
											</xp:selectItems>
										</xp:comboBox>
									</xp:td>
								</xp:tr>
							</xp:table>
						</xp:panel>
						<xp:panel id="PNL_sol_poliza_nro">
							<xp:this.rendered><![CDATA[#{javascript:viewScope.get("PNL_sol_poliza_nro")}]]></xp:this.rendered>
							<xp:table>
								<xp:tr>
									<xp:td>
										<xp:label value="Articulo:  " id="label1" style="font-weight:bold" for="sol_poliza_nro" />
									</xp:td>
									<xp:td>
										<xp:comboBox id="sol_articulo_cod" defaultValue="1203" required="true">
											<xp:selectItems id="selectItems2">
												<xp:this.value><![CDATA[#{javascript:importPackage(ar.com.hdi.autos.connect);
var jce:GetArrayFromQueryAS400 = new GetArrayFromQueryAS400();
jce.getSelectAS("solTB_SET621");}]]></xp:this.value>
											</xp:selectItems>
										</xp:comboBox>
									</xp:td>
								</xp:tr>
								<xp:tr>
									<xp:td>
										<xp:label value="Poliza Nro.:  " id="label3" style="font-weight:bold" for="sol_poliza_nro" />
									</xp:td>
									<xp:td>
										<xp:inputText id="sol_poliza_nro" disableClientSideValidation="true">
											<xp:this.converter>
												<xp:convertNumber type="number" integerOnly="true"></xp:convertNumber>
											</xp:this.converter>
										</xp:inputText>
									</xp:td>
								</xp:tr>
							</xp:table>
						</xp:panel>
					</xp:div>
				</xp:td>
			</xp:tr>
			<xp:tr>
				<xp:td>
					<xp:button value="Generar Propuesta" id="button1" style="text-align:center;margin-left:20.0%" icon="/sol_add24x24.png">
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete" id="eventHandler2"
							onComplete="XSP.endAjaxLoading();"
							onError="XSP.endAjaxLoading();">
							<xp:this.action>
								<![CDATA[#{javascript:var tipoMovimiento:String = getComponent("sol_tipoMovimiento_cod").getValue();
if(tipoMovimiento == "- Por favor Seleccione -"){
	var msg=new javax.faces.application.FacesMessage();
	facesContext.addMessage("Error",msg("Seleccione el movimiento"));
	return false;
}
var tipoOperacion:String = getComponent("sol_tipoOperacion_cod").getValue();
var poliza:String = getComponent("sol_poliza_nro").getValue();
if(viewScope.PNL_SubTipoOperacion == true && tipoOperacion == "- Por favor Seleccione -"){ //Seleccionar Subtipo
	var msg=new javax.faces.application.FacesMessage();
	facesContext.addMessage("Error",msg("Seleccione la operación"));
	return false;
}
if(viewScope.PNL_sol_poliza_nro == true && (@Trim(poliza) == "" || @Trim(poliza) == "0" || poliza =="null")){ //Ingresar poliza
	var msg=new javax.faces.application.FacesMessage();
	facesContext.addMessage("Error",msg("El Nro. de póliza es obligatorio"));
	return false;
}
//Si paso aca no hay errores simples
var TIMO:String = tipoMovimiento;
if (tipoMovimiento == "1" || tipoMovimiento == "2"){//Tengo Tipo y Subtipo
	var TIOP:String = "0";
}else if(tipoMovimiento == "5"){	
	var TIOP:String = "1";
}else{
	var TIOP:String = tipoOperacion;
}
var FROM:String = compositeData.propertyCreatedFrom;
var IDCH:String = context.getUrlParameter("documentId");
var FENV:String = compositeData.propertyFechaEnvio;

if(tipoMovimiento != "1"){	//Tengo Nro de poliza a asociar	
	/* -- Quito validacion por el ProcesoHistórico -- 
	var vEmitidasTodasPorRamaArtPoliza:NotesView = getDbPropuestas().getView("vLK_PropEmitidasPorArtPoliza");
	var docEmitida:NotesDocument = vEmitidasTodasPorRamaArtPoliza.getDocumentByKey(getComponent("sol_articulo_cod").getValue().toString() + getComponent("sol_poliza_nro").getValue().toString());
	print("Encuento docEmitida_" + docEmitida);
	if (docEmitida == null) {
		vEmitidasTodasPorRamaArtPoliza.recycle();
		var msg=new javax.faces.application.FacesMessage();
		facesContext.addMessage("Error",msg("No se ha encontrado la póliza indicada."));
		return false;
	}
	*/
	var vEmitidasPorRamaArtPoliza:NotesView = getDbPropuestas().getView("vLK_PropPadresPorArtPoliza");
	var docPropuestaPorEnganchar:NotesDocument = vEmitidasPorRamaArtPoliza.getDocumentByKey(getComponent("sol_articulo_cod").getValue().toString() + getComponent("sol_poliza_nro").getValue().toString());
	if (docPropuestaPorEnganchar == null) {
		vEmitidasPorRamaArtPoliza.recycle();
		var msg=new javax.faces.application.FacesMessage();
		facesContext.addMessage("Error",msg("La póliza indicada posee un movimento pendiente o ya ha sido tomada para su emisión."));
		return false;
	}
	
	if(docPropuestaPorEnganchar.getItemValueString("sol_status_cod") == "90") {
		var docPropuestaEmitida:NotesDocument = docPropuestaPorEnganchar;
	} else {
		var docPropuestaEmitida:NotesDocument = getUltimaPropuestaEmitida(docPropuestaPorEnganchar.getUniversalID(), docPropuestaPorEnganchar.getItemValueString("sol_pathHistorico_des"));
	}
	if(docPropuestaEmitida == null) {
		var msg=new javax.faces.application.FacesMessage();
		facesContext.addMessage("Error",msg("La póliza indicada no fue encontrada. Comuníquese con Sistemas."));
		return false;
	}
	
	var MsgOperacionIncoherente:String = getMsgOperacionIncoherente(tipoMovimiento, tipoOperacion, docPropuestaEmitida.getItemValueString("sol_tipoMovimiento_cod"), 
	docPropuestaEmitida.getItemValueString("sol_tipoOperacion_cod")); 
	if( MsgOperacionIncoherente != "") { //Mensaje operacion incoherente
		var msg=new javax.faces.application.FacesMessage();
		facesContext.addMessage("Error",msg(MsgOperacionIncoherente));
		return false;
	}
	// Si la póliza es de una rama secundaria de una póliza multirrama, no se pueden realizar movimientos
	if (docPropuestaEmitida.hasItem("sol_polizaMultirrama_cod")){
		if( docPropuestaEmitida.getItemValueString("sol_polizaMultirrama_cod") == "1") {
			var msg=new javax.faces.application.FacesMessage();
			facesContext.addMessage("Error",msg("La póliza indicada es de una rama secundaria. No se pueden realizar movimientos a una póliza multirrama desde una rama secundaria."));
			return false;
		}
	}
	var urlNuevaPropuestaFromDoc:String;
	if(getIsGroupMember("spwAU.N3.COBR.USR_CRUD")) {
		// A funcion nuevaPropuestaFromDoc le paso (doc de donde tomar los datos(que se va a transformar en hija de la nueva), estado, tipomovimiento, tipoOperacion, idMailAsociado)
		urlNuevaPropuestaFromDoc = nuevaPropuestaFromDoc(docPropuestaPorEnganchar, "95", TIMO, TIOP, IDCH);
		if(urlNuevaPropuestaFromDoc.equals("ERR001")) {
			var msg=new javax.faces.application.FacesMessage();
			facesContext.addMessage("Error",msg("No se ha encontrado la póliza en Gaus"));
			return false;
		} else if(urlNuevaPropuestaFromDoc.equals("ERR002")) {
			var msg=new javax.faces.application.FacesMessage();
			facesContext.addMessage("Error",msg("No existen periodos a refacturar"));
			return false;
		} else {
			context.redirectToPage(urlNuevaPropuestaFromDoc);
		}
	} else {
		//WS de inhibir renovacion
		
		// A funcion nuevaPropuestaFromDoc le paso (doc de donde tomar los datos(que se va a transformar en hija de la nueva), estado, tipomovimiento, tipoOperacion, idMailAsociado)
		urlNuevaPropuestaFromDoc = nuevaPropuestaFromDoc(docPropuestaPorEnganchar, "5", TIMO, TIOP, IDCH);
		if(urlNuevaPropuestaFromDoc.equals("ERR001")){
			var msg=new javax.faces.application.FacesMessage();
			facesContext.addMessage("Error",msg("No se ha encontrado la póliza en Gaus"));
			return false;
		}else if(urlNuevaPropuestaFromDoc.equals("ERR002")){
			var msg=new javax.faces.application.FacesMessage();
			facesContext.addMessage("Error",msg("No existen periodos a refacturar"));
			return false;
		}else{
			context.redirectToPage(urlNuevaPropuestaFromDoc);
		}
	}	
}else{ 
	context.redirectToPage("xfdocPropuesta.xsp?OpenXPage&login&TIMO=" + TIMO + "&TIOP=" + TIOP + "&" + FROM + "=" + IDCH + "&FENV=" + FENV);

}
}]]>
							</xp:this.action>
							<xp:this.onStart><![CDATA[XSP.startAjaxLoading('Cargando...')]]></xp:this.onStart>
						</xp:eventHandler>
					</xp:button>
				</xp:td>
			</xp:tr>
		</xp:table>
	</xe:dialog>
</xp:view>