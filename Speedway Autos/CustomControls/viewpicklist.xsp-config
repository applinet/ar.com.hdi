<?xml version="1.0" encoding="UTF-8"?>
<faces-config>
  <faces-config-extension>
    <namespace-uri>http://www.ibm.com/xsp/custom</namespace-uri>
    <default-prefix>xc</default-prefix>
  </faces-config-extension>
  <composite-component>
    <component-type>viewpicklist</component-type>
    <composite-name>viewpicklist</composite-name>
    <composite-file>/viewpicklist.xsp</composite-file>
    <composite-extension>
      <designer-extension>
        <in-palette>true</in-palette>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xp_1="http://www.ibm.com/xsp/coreex"&gt;&#xd;
&lt;xp:button value="View Pick List v3.0"&#xd;
		id="button2" style="font-weight:bold;display:inline-block;"&gt;&#xd;
&lt;/xp:button&gt;&#xd;
&lt;xp:label value="  HughesConnect.com" id="label1" style="font-weight:bold;color:rgb(0,94,187)"&gt;&lt;/xp:label&gt;&#xd;
&lt;/xp:view&gt;</render-markup>
      </designer-extension>
    </composite-extension>
    <property>
      <property-name>dialogID</property-name>
      <property-class>string</property-class>
      <display-name>Dialog ID</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor/>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <description>A Unique Value for the dialog, no spaces or special characters allowed.&#xd;
&#xd;
example: Dialog1</description>
    </property>
    <property>
      <property-name>datasrc</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <category>2. View Info</category>
          <editor>com.ibm.workplace.designer.property.editors.dataSourcePicker</editor>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <description>Select a view from the datasource list.  You will need a unique datasource view for each picklist on the page even it it uses the same view.  If you do not have anything listed, go to Xpage Properties, then Data , and add a view.&#xd;
&#xd;
example: view1</description>
    </property>
    <property>
      <property-name>rowsPerPage</property-name>
      <property-class>string</property-class>
      <display-name>rowsPerPage</display-name>
      <property-extension>
        <required>true</required>
        <designer-extension>
          <category>2. View Info</category>
          <default-value>10</default-value>
        </designer-extension>
      </property-extension>
      <description>How many entries do you want to show before the user will have to use the pager to go to the next page.&#xd;
&#xd;
example: 11</description>
    </property>
    <property>
      <property-name>viewColumn</property-name>
      <property-class>java.util.Collection</property-class>
      <display-name>viewColumn</display-name>
      <property-extension>
        <designer-extension>
          <category>2. View Info</category>
          <editor>com.ibm.std.Integer</editor>
        </designer-extension>
        <property-item-class>int</property-item-class>
        <collection-property>true</collection-property>
        <required>false</required>
      </property-extension>
      <description>The number of the column in the view, starting with 0&#xd;
You can add as many columns as you would like to display from the view.&#xd;
&#xd;
example: 1</description>
    </property>
    <property>
      <property-name>selectColumn</property-name>
      <property-class>int</property-class>
      <display-name>Select Column</display-name>
      <property-extension>
        <designer-extension>
          <category>2. View Info</category>
          <editor>com.ibm.std.Integer</editor>
          <visible>select.toString() == "Column"</visible>
          <validation-formula/>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The number of the column you would like the value to be selected from.  Column values start with 0.  So the first column is 0, the second is 1.&#xd;
&#xd;
example: 2</description>
    </property>
    <property>
      <property-name>fieldName</property-name>
      <property-class>string</property-class>
      <display-name>fieldName</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <required>true</required>
          <visible>onReturn.toString() == "Set Field Value"</visible>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The name of the field you would like the value to be selected from the document in the view.&#xd;
&#xd;
example: city</description>
    </property>
    <property>
      <property-name>buttonText</property-name>
      <property-class>string</property-class>
      <display-name>Button Label</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <default-value/>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Button"</visible>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>Text for the select button in the view picklist.&#xd;
&#xd;
example:  Select</description>
    </property>
    <property>
      <property-name>buttonImage</property-name>
      <property-class>string</property-class>
      <display-name>Button Image</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Button"</visible>
          <default-value>./add.png</default-value>
        </designer-extension>
      </property-extension>
      <description>Image for the select button in the view picklist.&#xd;
&#xd;
example:  ./add.png</description>
    </property>
    <property>
      <property-name>buttonClass</property-name>
      <property-class>string</property-class>
      <display-name>Button Class</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Button"</visible>
          <default-value/>
        </designer-extension>
      </property-extension>
      <description>The class for the select button in the view picklist.&#xd;
&#xd;
example:  button</description>
    </property>
    <property>
      <property-name>tableClass</property-name>
      <property-class>string</property-class>
      <display-name>tableClass</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>tablecellgreen</default-value>
        </designer-extension>
      </property-extension>
      <description>The class of the view picklist panel.</description>
    </property>
    <property>
      <property-name>headerClass</property-name>
      <property-class>string</property-class>
      <display-name>headerClass</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>headerclass</default-value>
        </designer-extension>
      </property-extension>
      <description>The class for the headers on the view picklist.</description>
    </property>
    <property>
      <property-name>rowClass</property-name>
      <property-class>string</property-class>
      <display-name>rowClass</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>odd, even</default-value>
        </designer-extension>
      </property-extension>
      <description>The class for the rows on the viewpicklist.&#xd;
&#xd;
example: even, odd</description>
    </property>
    <property>
      <property-name>searchBar</property-name>
      <property-class>boolean</property-class>
      <display-name>searchBar</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <editor>com.ibm.std.Boolean</editor>
          <default-value>false</default-value>
        </designer-extension>
      </property-extension>
      <description>Show or hide the Search Bar in the picklist.</description>
    </property>
    <property>
      <property-name>searchButtonText</property-name>
      <property-class>string</property-class>
      <display-name>searchButtonText</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <visible>searchBar.toString() == 'true'</visible>
          <default-value>Search</default-value>
        </designer-extension>
      </property-extension>
      <description>The text on the search button on the view picklist. </description>
    </property>
    <property>
      <property-name>searchButtonImage</property-name>
      <property-class>string</property-class>
      <display-name>searchButtonImage</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <visible>searchBar.toString() == 'true'</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
        </designer-extension>
      </property-extension>
      <description>The image on the search button on the view picklist. </description>
    </property>
    <property>
      <property-name>searchButtonClass</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <visible>searchBar.toString() == 'true'</visible>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>button2</default-value>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The class of the search button on the view picklist. </description>
    </property>
    <property>
      <property-name>searchBarClass</property-name>
      <property-class>string</property-class>
      <display-name>searchBarClass</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <visible/>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>headerclass</default-value>
        </designer-extension>
      </property-extension>
      <description>The class of the cell the search bar and pager sit in. </description>
    </property>
    <property>
      <property-name>pagerStyleFirst</property-name>
      <property-class>string</property-class>
      <display-name>pagerStyleFirst</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>navbutton1</default-value>
        </designer-extension>
      </property-extension>
      <description>The 'First' button on the pager</description>
    </property>
    <property>
      <property-name>pagerStylePrevious</property-name>
      <property-class>string</property-class>
      <display-name>pagerStylePrevious</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>navbutton2</default-value>
        </designer-extension>
      </property-extension>
      <description>The 'Previous' button on the pager</description>
    </property>
    <property>
      <property-name>pagerStyleCurrent</property-name>
      <property-class>string</property-class>
      <display-name>pagerStyleCurrent</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>navbutton4</default-value>
        </designer-extension>
      </property-extension>
      <description>The 'Current' button on the pager</description>
    </property>
    <property>
      <property-name>pagerStyleNext</property-name>
      <property-class>string</property-class>
      <display-name>pagerStyleNext</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>navbutton2</default-value>
        </designer-extension>
      </property-extension>
      <description>The 'Next' button on the pager</description>
    </property>
    <property>
      <property-name>pagerStyleLast</property-name>
      <property-class>string</property-class>
      <display-name>pagerStyleLast</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>navbutton3</default-value>
        </designer-extension>
      </property-extension>
      <description>The 'Last' button on the pager</description>
    </property>
    <property>
      <property-name>searchVar</property-name>
      <property-class>string</property-class>
      <display-name>searchVar</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <visible>searchBar.toString() == 'true'</visible>
          <default-value/>
        </designer-extension>
      </property-extension>
      <description>The global variable that the search filter uses on the view data source.&#xd;
&#xd;
example:  sessionScope.searchThis</description>
    </property>
    <property>
      <property-name>dialogHeight</property-name>
      <property-class>string</property-class>
      <display-name>dialogHeight</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor/>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The height of the dialog box.&#xd;
&#xd;
example: 100px&#xd;
example2: 100%</description>
    </property>
    <property>
      <property-name>dialogWidth</property-name>
      <property-class>string</property-class>
      <display-name>dialogWidth</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor/>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The width of the dialog.&#xd;
&#xd;
example: 100px&#xd;
example2: 100%</description>
    </property>
    <property>
      <property-name>dialogTitle</property-name>
      <property-class>string</property-class>
      <display-name>dialogTitle</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor/>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>The title of the view picklist&#xd;
&#xd;
example:  Please choose the correct value.</description>
    </property>
    <property>
      <property-name>typeAheadBar</property-name>
      <property-class>boolean</property-class>
      <display-name>typeAheadBar</display-name>
      <property-extension>
        <designer-extension>
          <category>5. Type Ahead Bar</category>
          <editor>com.ibm.std.Boolean</editor>
          <default-value>false</default-value>
        </designer-extension>
      </property-extension>
      <description>Show or hide the type ahead filter on the view picklist.</description>
    </property>
    <property>
      <property-name>typeAheadVar</property-name>
      <property-class>string</property-class>
      <display-name>typeAheadVar</display-name>
      <property-extension>
        <designer-extension>
          <category>5. Type Ahead Bar</category>
          <visible>typeAheadBar.toString() == 'true'</visible>
        </designer-extension>
      </property-extension>
      <description>The global variable that is used in the filter column on the view datasource.&#xd;
&#xd;
example:  sessionScope.typeahead1</description>
    </property>
    <property>
      <property-name>select</property-name>
      <property-class>string</property-class>
      <display-name>select</display-name>
      <property-extension>
        <designer-extension>
          <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
          <editor-parameter>
          Column
          Field
          UNID
          </editor-parameter>
          <default-value>Column</default-value>
          <category>2. View Info</category>
        </designer-extension>
      </property-extension>
      <description>What is selected when they press the view picklist select button.  A column in the view, or a field on the document in the view.</description>
    </property>
    <property>
      <property-name>selectField</property-name>
      <property-class>string</property-class>
      <display-name>selectField</display-name>
      <property-extension>
        <designer-extension>
          <visible>select.toString() == "Field"</visible>
          <category>2. View Info</category>
        </designer-extension>
      </property-extension>
      <description>The field name in the document you want to return as your selected value.&#xd;
&#xd;
example: city</description>
    </property>
    <property>
      <property-name>onReturn</property-name>
      <property-class>string</property-class>
      <display-name>onReturn</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
          <editor-parameter>
          Set Field Value
          Set Scope Value
          Set Document Value
          </editor-parameter>
          <default-value>Set Field Value</default-value>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <description>Set field value:  will set the id of the element you want the selction to go into.&#xd;
example: inputText1&#xd;
&#xd;
Set Scope Value:  Set a scope variable with a the value.&#xd;
example: sessionScope.city&#xd;
&#xd;
Set Document Value: set the value of a bound document datasource field.&#xd;
example: document1.city</description>
    </property>
    <property>
      <property-name>varName</property-name>
      <property-class>string</property-class>
      <display-name>varName</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <visible>onReturn.toString() == "Set Scope Value" || onReturn.toString() == "Set Document Value"</visible>
        </designer-extension>
      </property-extension>
      <description>The variable for Set Scope or set Document Value, depending on what is chosen.&#xd;
example: document1.city&#xd;
example2: sessionScope.city</description>
    </property>
    <property>
      <property-name>refreshID</property-name>
      <property-class>string</property-class>
      <display-name>refreshID</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor>com.ibm.workplace.designer.property.editors.elementPicker</editor>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <description>The id of the element to refresh after your selection.&#xd;
&#xd;
example:inputText1</description>
    </property>
    <property>
      <property-name>bottomBarClass</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>bottomround headerclass</default-value>
        </designer-extension>
      </property-extension>
      <description>The class of the bottom button bar.</description>
    </property>
    <property>
      <property-name>cancelButtonText</property-name>
      <property-class>string</property-class>
      <display-name>cancelButtonText</display-name>
      <property-extension>
        <designer-extension>
          <category>6. Cancel Button</category>
          <default-value>Cancel</default-value>
        </designer-extension>
      </property-extension>
      <description>The text on the cancel button.&#xd;
&#xd;
example: Cancel</description>
    </property>
    <property>
      <property-name>cancelButtonClass</property-name>
      <property-class>string</property-class>
      <display-name>cancelButtonClass</display-name>
      <property-extension>
        <designer-extension>
          <category>6. Cancel Button</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <default-value>button2 floatthisright</default-value>
        </designer-extension>
      </property-extension>
      <description>The class of the cancel button.</description>
    </property>
    <property>
      <property-name>cancelButtonImg</property-name>
      <property-class>string</property-class>
      <display-name>cancelButtonImg</display-name>
      <property-extension>
        <designer-extension>
          <category>6. Cancel Button</category>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
        </designer-extension>
      </property-extension>
      <description>The image on the cancel button.&#xd;
&#xd;
example: ./cancel.png</description>
    </property>
    <property>
      <property-name>type</property-name>
      <property-class>string</property-class>
      <display-name>type</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
          <editor-parameter>
          Single Value
          Multi Value
          </editor-parameter>
          <default-value>Single Value</default-value>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <description>Will this be a single value pickllist or a multi-value picklist?</description>
    </property>
    <property>
      <property-name>finishButtonText</property-name>
      <property-class>string</property-class>
      <display-name>finishButtonText</display-name>
      <property-extension>
        <designer-extension>
          <category>7. Finish Button</category>
          <default-value>Finish</default-value>
          <visible>type.toString() == "Multi Value"</visible>
        </designer-extension>
      </property-extension>
      <description>The Text on the finish button.&#xd;
&#xd;
example: Finished&#xd;
</description>
    </property>
    <property>
      <property-name>finishButtonClass</property-name>
      <property-class>string</property-class>
      <display-name>finishButtonClass</display-name>
      <property-extension>
        <designer-extension>
          <category>7. Finish Button</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>type.toString() == "Multi Value"</visible>
          <default-value>button2 floatthisright</default-value>
        </designer-extension>
      </property-extension>
      <description>the class of the finish button.</description>
    </property>
    <property>
      <property-name>finishButtonImg</property-name>
      <property-class>string</property-class>
      <display-name>finishButtonImg</display-name>
      <property-extension>
        <designer-extension>
          <category>7. Finish Button</category>
          <visible>type.toString() == "Multi Value"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
        </designer-extension>
      </property-extension>
      <description>The image on the finish button.&#xd;
&#xd;
example: ./finish.png</description>
    </property>
    <property>
      <property-name>multiSelectButtonAddImg</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectButtonAddImg</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Button"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
          <default-value>./add.png</default-value>
        </designer-extension>
      </property-extension>
      <description>The image shown for adding a value on a multiselect picklist.&#xd;
&#xd;
example: ./add.png</description>
    </property>
    <property>
      <property-name>multiSelectButtonRemoveImg</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectButtonRemoveImg</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Button"</visible>
          <default-value>./delete.png</default-value>
        </designer-extension>
      </property-extension>
      <description>The image shown for removing a value on a multiselect picklist.&#xd;
&#xd;
example: ./delete.png</description>
    </property>
    <property>
      <property-name>multiSelectButtonClass</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectButtonClass</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Button"</visible>
        </designer-extension>
      </property-extension>
      <description>The class of the add/remove button on a multi-value picklist.</description>
    </property>
    <property>
      <property-name>multiSelectButtonRemoveText</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectButtonRemoveText</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Button"</visible>
        </designer-extension>
      </property-extension>
      <description>The text on the select button a multi-value picklist to remove a value.&#xd;
&#xd;
example: Remove</description>
    </property>
    <property>
      <property-name>multiSelectButtonAddText</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectButtonAddText</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Button"</visible>
        </designer-extension>
      </property-extension>
      <description>The text on the select button a multi-value picklist to add the value.&#xd;
&#xd;
example: Add</description>
    </property>
    <property>
      <property-name>picklistButtonText</property-name>
      <property-class>string</property-class>
      <display-name>picklistButtonText</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <visible>openDialogWith.toString() == "Button"</visible>
        </designer-extension>
      </property-extension>
      <description>The text on the button on the main Xpage to open the picklist dialog.&#xd;
&#xd;
example: Choose your values</description>
    </property>
    <property>
      <property-name>picklistButtonClass</property-name>
      <property-class>string</property-class>
      <display-name>picklistButtonClass</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>openDialogWith.toString() == "Button"</visible>
          <default-value>button</default-value>
        </designer-extension>
      </property-extension>
      <description>The class on the button on the main Xpage to open the picklist dialog.</description>
    </property>
    <property>
      <property-name>picklistButtonImg</property-name>
      <property-class>string</property-class>
      <display-name>picklistButtonImg</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <visible>openDialogWith.toString() == "Button"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
        </designer-extension>
      </property-extension>
      <description>The image on the button on the main Xpage to open the picklist dialog.&#xd;
&#xd;
example:  ./add.png</description>
    </property>
    <property>
      <property-name>pagerStyleClass</property-name>
      <property-class>string</property-class>
      <display-name>pagerStyleClass</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - pager</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>ssjsSelectFunction</property-name>
      <property-class>string</property-class>
      <display-name>ssjsSelectFunction</display-name>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
        </designer-extension>
      </property-extension>
      <description>A SSJS function to be run when the item is selected or the finished button is selected before the refresh.  If a single value is chosen it will pass a string, if multivalue is chosen it will pass in an array.&#xd;
&#xd;
example: &#xd;
________________________________________________&#xd;
this is the function in your script library:&#xd;
function foo(bar1){&#xd;
for(x in bar1){&#xd;
...&#xd;
}&#xd;
}&#xd;
_________________________________________________&#xd;
this is the value you would add to the field:&#xd;
foo</description>
    </property>
    <property>
      <property-name>openDialogWith</property-name>
      <property-class>string</property-class>
      <display-name>openDialogWith</display-name>
      <property-extension>
        <designer-extension>
          <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
          <editor-parameter>
          Button
          Link
          </editor-parameter>
          <default-value>Button</default-value>
          <category>1. View PickList</category>
        </designer-extension>
        <required>true</required>
      </property-extension>
    </property>
    <property>
      <property-name>picklistLinkText</property-name>
      <property-class>string</property-class>
      <display-name>picklistLinkText</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <visible>openDialogWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>picklistLinkImg</property-name>
      <property-class>string</property-class>
      <display-name>picklistLinkImg</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <visible>openDialogWith.toString() == "Link"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
          <default-value>./add.png</default-value>
        </designer-extension>
      </property-extension>
      <description>The image on the link on the main Xpage to open the picklist dialog.&#xd;
&#xd;
example:  ./add.png</description>
    </property>
    <property>
      <property-name>picklistLinkStyle</property-name>
      <property-class>string</property-class>
      <display-name>picklistLinkStyle</display-name>
      <property-extension>
        <designer-extension>
          <category>styling - picklist</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>openDialogWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
      <description>The class on the button on the main Xpage to open the picklist dialog.</description>
    </property>
    <property>
      <property-name>linkText</property-name>
      <property-class>string</property-class>
      <display-name>linkText</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
      <description>The text on the button on the main Xpage to open the picklist dialog.&#xd;
&#xd;
example: Choose your values</description>
    </property>
    <property>
      <property-name>linkImg</property-name>
      <property-class>string</property-class>
      <display-name>linkImg</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Link"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>linkClass</property-name>
      <property-class>string</property-class>
      <display-name>linkClass</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>type.toString() == "Single Value" &amp;&amp; selectWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>multiSelectLinkAddImg</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectLinkAddImg</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Link"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
          <default-value>./add.png</default-value>
        </designer-extension>
      </property-extension>
      <description>The image shown for adding a value on a multiselect picklist.&#xd;
&#xd;
example: ./add.png</description>
    </property>
    <property>
      <property-name>multiSelectLinkRemoveImg</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectLinkRemoveImg</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Link"</visible>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
          <default-value>./delete.png</default-value>
        </designer-extension>
      </property-extension>
      <description>The image shown for removing a value on a multiselect picklist.&#xd;
&#xd;
example: ./delete.png</description>
    </property>
    <property>
      <property-name>multiSelectLinkRemoveText</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectLinkRemoveText</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
      <description>The text on the select button a multi-value picklist to remove a value.&#xd;
&#xd;
example: Remove</description>
    </property>
    <property>
      <property-name>multiSelectLinkAddText</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectLinkAddText</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>multiSelectLinkClass</property-name>
      <property-class>string</property-class>
      <display-name>multiSelectLinkClass</display-name>
      <property-extension>
        <designer-extension>
          <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
          <visible>type.toString() == "Multi Value" &amp;&amp; selectWith.toString() == "Link"</visible>
        </designer-extension>
      </property-extension>
      <description>The class of the add/remove button on a multi-value picklist.</description>
    </property>
    <property>
      <property-name>selectWith</property-name>
      <property-class>string</property-class>
      <property-extension>
        <designer-extension>
          <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
          <editor-parameter>
          Button
          Link
          </editor-parameter>
          <default-value>Button</default-value>
          <category>3. Select Button/Link</category>
        </designer-extension>
        <required>true</required>
      </property-extension>
      <display-name>selectWith</display-name>
      <description>Choose either Link or Button for the select method inside the view</description>
    </property>
    <property>
      <property-name>multiValueSeparator</property-name>
      <property-class>string</property-class>
      <description>The separator used in the multivalue on the notes field.</description>
      <property-extension>
        <designer-extension>
          <category>1. View PickList</category>
          <editor/>
          <default-value>,</default-value>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>clearSearchImg</property-name>
      <property-class>string</property-class>
      <display-name>clearSearchImg</display-name>
      <property-extension>
        <designer-extension>
          <category>4. Search Bar</category>
          <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
          <default-value>./cross.png</default-value>
          <visible>searchBar.toString() == 'true'</visible>
        </designer-extension>
      </property-extension>
    </property>
    <property>
      <property-name>SelectCellWidth</property-name>
      <property-class>string</property-class>
      <display-name>SelectCellWidth</display-name>
      <property-extension>
        <designer-extension>
          <category>3. Select Button/Link</category>
          <editor>com.ibm.std.String</editor>
          <default-value>30px</default-value>
          <visible>true</visible>
        </designer-extension>
        <required>false</required>
      </property-extension>
      <description>the width of the cell containing the button or link to selct the value in the picklist.</description>
    </property>
  </composite-component>
</faces-config>
