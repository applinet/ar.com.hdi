'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library FuncionesGenerales
	Created May 27, 2013 by Diego L/axin
	Description: Comments for Library
%END REM
Option Public
Option Declare
Use "IncludeLSConst"
UseLSX "*LSXODBC"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class Asegurado
Declare Sub Initialize
Declare Function getDbCfg ()
Declare Function getDatosAsegurado (strAsegCode_param As String) As Asegurado
Declare Function Word ( Source As String, Separator As String, Palabra As Long ) As String
Declare Function getdataMailing(CodigoMailing As String, valor As String)
Declare Function ReplaceSubString( Source As String , CadenaBuscar As String, CadenaRemplazo As String) As String
Declare Function getODBCConfig (strKey_param As String) As NotesDocument
Declare Function getCamposExport(NombreExcel As String, valor As String)

'++LotusScript Development Environment:2:5:(Declarations):0:10
Dim dbCfg_global As NotesDatabase
%REM
	Class Asegurado
	Description: Comments for Class
%END REM
Class Asegurado
	
	Public strCode As String
	Public strNombre As String
	Public strDomDire As String
	Public strDomLoc As String
	Public strDomProv As String
	Public strDomProvCode As String
	Public strDomCodPostal As String
		
End Class
'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize

	
End Sub

'++LotusScript Development Environment:2:1:getDbCfg:5:8
%REM
	Function getDbCfg
	Description: Devuelve la base de datos de configuración.
%END REM
Function getDbCfg ()
	On Error GoTo errHandler
	
	If Not dbCfg_global Is Nothing Then Exit Function
	
	Dim s As New NotesSession
	Dim vConfigs As NotesView
	Dim docConfig As NotesDocument
	Dim strServer As String
	Dim strPath As String
	
	Set vConfigs = s.Currentdatabase.Getview("v.Sys.Cfg")
	If vConfigs Is Nothing Then Error 9999, "No se encontró la vista v.Sys.Cfg"
	Set docConfig = vConfigs.Getdocumentbykey("Configuracion", True)
	If docConfig Is Nothing Then Error 9999, "No se encontró el documento Configuracion en v.Sys.Cfg"
	
	strServer = docConfig.Getitemvalue("conf_server")(0)
	strPath = docConfig.Getitemvalue("conf_path")(0)
	
	Set dbCfg_global = New NotesDatabase (strServer, strPath)
	
	Exit Function
errHandler:
	Error Err, Error$ + " - " + CStr (GetThreadInfo (LSI_THREAD_PROC)) + " - Line " + CStr (Erl) + Chr (13)
	Exit Function
End Function



'++LotusScript Development Environment:2:1:getDatosAsegurado:6:8
%REM
	Function getDatosAsegurado
	Description: Comments for Function
%END REM

Function getDatosAsegurado (strAsegCode_param As String) As Asegurado
	On Error GoTo errHandler
	
	Dim con As ODBCConnection
	Dim qry As ODBCQuery
	Dim result As ODBCResultSet
	Dim strQuery As String
	
	Dim myAseg As New Asegurado
	Dim docODBC As NotesDocument
	Dim strODBC_Source As String
	Dim strODBC_LectUser As String
	Dim strODBC_LectPass As String
	Dim strODBC_TablaAsegPorNombre As String
	
	
	Set docODBC = getODBCConfig ("AS400Gauss")
	
	strODBC_Source = docODBC.Getitemvalue("odbc_DataSource_des")(0)
	strODBC_LectUser = docODBC.Getitemvalue("odbc_LectUser_des")(0)
	strODBC_LectPass = docODBC.Getitemvalue("odbc_LectPass_des")(0)
	strODBC_TablaAsegPorNombre = docODBC.Getitemvalue("odbc_Tabla1_des")(0)
	
	
	Set con = New ODBCConnection
	Call con.ConnectTo(strODBC_Source, strODBC_LectUser, strODBC_LectPass)

	Set qry = New ODBCQuery
	Set result = New ODBCResultSet
	Set qry.Connection = con
	Set result.Query = qry

	strQuery = "select * from " + strODBC_TablaAsegPorNombre + " where ( ASASEN = " + strAsegCode_param +" )"
	'Print strQuery
	
	qry.SQL = strQuery
	result.Execute		
	
	If result.IsResultSetAvailable Then
		result.FirstRow
		myAseg.strCode = result.GetValue( "ASASEN" )
		myAseg.strNombre = result.GetValue( "ASASEN" )
		myAseg.strDomDire = result.GetValue( "DFDOMI" )
		myAseg.strDomLoc = result.GetValue( "LOLOCA" )
		myAseg.strDomProv = result.GetValue( "PRPROD" )
		myAseg.strDomProvCode = result.GetValue( "LOPROC" )
		myAseg.strDomCodPostal = result.GetValue( "DFCOPO" )
				
	End If
	
	Set getDatosAsegurado = myAseg
	
	Exit Function
errHandler:
	
	Error Err, Error$ + "(" + result.Getextendederrormessage() + ") - " + CStr (GetThreadInfo (LSI_THREAD_PROC)) + " - Line " + CStr (Erl) + Chr (13)
	Exit Function
	
End Function


'++LotusScript Development Environment:2:1:Word:1:8
Function Word ( Source As String, Separator As String, Palabra As Long ) As String
	
	Dim pos As Long
	Dim NroPalabra As Long
	Dim start As Long
	
	NroPalabra = 1
	start = 1     
	pos = InStr( Source, Separator )
	Do Until pos = 0      
		If NroPalabra = Palabra Then Exit Do
		start = pos + Len( Separator )
		pos = InStr( start, Source, Separator)
		NroPalabra = NroPalabra + 1
	Loop
	
	If NroPalabra = Palabra Then
		If pos <> 0 Then
			Word = Mid( Source, start, pos - start )
		Else
			Word = Mid( Source, start )
		End If
	Else
		Word = ""
	End If 
	
End Function


'++LotusScript Development Environment:2:1:getdataMailing:1:8
Function getdataMailing(CodigoMailing As String, valor As String)
	
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim view As NotesView
	Dim doc As NotesDocument
	Dim campo As Variant
	
	Call getDbCfg()
	
	Set view = dbCfg_global.getview("v.Sys.Mail.Clave")
	Set doc = view.getfirstdocument
	
	While Not doc Is Nothing
		
		If doc.mail_Clave_des(0) = CodigoMailing Then
		
			campo = doc.GetItemValue(valor)
			getdataMailing = campo(0)
			
		End If
	
	Set doc = view.Getnextdocument(doc)
		
	Wend
	
End Function


'++LotusScript Development Environment:2:1:ReplaceSubString:1:8
Function ReplaceSubString( Source As String , CadenaBuscar As String, CadenaRemplazo As String) As String
'--------------------------------------------------------------------------------------
' Descripcion:
'             Esta funcion equivale al @ReplaceSubString
'--------------------------------------------------------------------------------------
' Parametros:     
'                 Source: contiene la cadena string original     
'                 CadenaBuscar: contiene la cadena string a buscar
'                 CadenaRemplazo: contiene la cadena string que se colocara en lugar de "CadenaBuscar" en caso que esta se encuentre
'--------------------------------------------------------------------------------------          
' Devuelve:
'                Devuelve la cadena transformada segun los valores entontrados y reemplazados
'--------------------------------------------------------------------------------------
	Dim pos As Variant
	Dim resultado As Variant
	Resultado = Source
	Pos = InStr(Resultado, CadenaBuscar)
	Do While Pos > 0
		Resultado = Left(Resultado,pos-1) + CadenaRemplazo + Mid(Resultado,pos+Len(CadenaBuscar))
		Pos = InStr(Resultado, CadenaBuscar)
	Loop
	ReplaceSubString = Resultado
End Function


'++LotusScript Development Environment:2:1:getODBCConfig:5:8
%REM
	Function getODBCConfig
	Description: Comments for Function
%END REM
Function getODBCConfig (strKey_param As String) As NotesDocument
	On Error GoTo errHandler
	
	Dim vODBC As NotesView
	Dim docODBC As NotesDocument
	
	Call getDbCfg()
	
	Set vODBC = dbCfg_global.Getview("v.Sys.ODBC")
	If vODBC Is Nothing Then Error 9999, "No se encontró la vista v.Sys.ODBC"
	
	Set docODBC = vODBC.Getdocumentbykey(strKey_param, True)
	If docODBC Is Nothing Then Error 9999, "No se encontró el documento de configuración ODBC para " + strKey_param
	
	Set getODBCConfig = docODBC
	
	Exit Function
errHandler:
	Error Err, Error$ + " - " + CStr (GetThreadInfo (LSI_THREAD_PROC)) + " - Line " + CStr (Erl) + Chr (13)
	Exit Function
	
End Function



'++LotusScript Development Environment:2:1:getCamposExport:1:8
Function getCamposExport(NombreExcel As String, valor As String)
	
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim view As NotesView
	Dim doc As NotesDocument
	Dim campo As Variant
	
	Call getDbCfg()
	
	Set view = dbCfg_global.getview("v.Sys.Export")
	Set doc = view.getfirstdocument
	
	While Not doc Is Nothing
		
		If doc.name_profile_excel(0) = NombreExcel Then
		
			campo = doc.GetItemValue(valor)
			getCamposExport = campo(0)
			
		End If
	
	Set doc = view.Getnextdocument(doc)
		
	Wend
	
End Function


