<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xp_1="http://www.ibm.com/xsp/coreex">

	<xp:this.resources>
		<xp:script
			src="/CustomControlLib.js"
			clientSide="true"
		>
		</xp:script>
		<xp:styleSheet href="/viewpicklistCC.css"></xp:styleSheet>
		<xp:styleSheet href="/MVDBCC.css"></xp:styleSheet>
	</xp:this.resources>
	<xp:button
		value="#{javascript:compositeData.picklistButtonText}"
		icon="#{javascript:compositeData.picklistButtonImg}">
		<xp:this.rendered><![CDATA[#{javascript:compositeData.openDialogWith.toString() != "Link"}]]></xp:this.rendered>
		<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "button5999"}]]></xp:this.id>
		<xp:this.styleClass><![CDATA[#{javascript:compositeData.picklistButtonClass + " domfindmebutton5999"}]]></xp:this.styleClass><xp:eventHandler
			event="onclick"
			submit="true"
			refreshMode="partial"
			disableValidators="true"
		>
			<xp:this.script><![CDATA[dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').show()]]></xp:this.script>
			<xp:this.action><![CDATA[#{javascript:
if(compositeData.type.toString() == "Multi Value"){
var mylist = new java.util.ArrayList()
var thisarray = sessionScope.put("selections", mylist)

var setvalue = ""

if(compositeData.onReturn.toString() == "Set Field Value"){
var scope1 =  sessionScope.get("selections")
setvalue =(compositeData.fieldName)
var value1 = getComponent(setvalue).getValue()
if(compositeData.multiValueSeparator.toString() == ""){
		var sep1 = ","
	}else{
	var sep1 = compositeData.multiValueSeparator
	}
	
if(@Trim(value1) != ""){

	var existingitems = value1.split(sep1)
	var array1 =(existingitems.constructor == Array) ? existingitems : [ existingitems ];
	for(x in array1){
	scope1.add(array1[x])
	}	
	}

}else{
	if(compositeData.onReturn.toString() == "Set Scope Value"){
	var scope1 =  sessionScope.get("selections")
	var computedvalue1 = @Left((compositeData.varName), ".") + ".get('" + @Right((compositeData.varName), ".") +  "')"
	var vector1 = eval(computedvalue1 )	
	for(x in vector1){
		scope1.add(x)
	}	
	}else{
	var computedvalue1  = @Left((compositeData.varName), ".") + ".getItemValue('" + @Right((compositeData.varName), ".") +  "')"
	var computedvalue2:java.util.Vector  = (eval(computedvalue1 ))
			var scope1 =  sessionScope.get("selections")
	for(x in computedvalue2){
	if(@Trim(x) != ""){
	scope1.add(x)
	}				
				}
			}
		}
//	}
}}]]></xp:this.action>
			<xp:this.refreshId><![CDATA[#{javascript:compositeData.dialogID + "panel"}]]></xp:this.refreshId>
		</xp:eventHandler>
	</xp:button>
	<xp:link
		escape="true"
		text="#{javascript:compositeData.picklistLinkText}">
		<xp:this.rendered><![CDATA[#{javascript:compositeData.openDialogWith.toString() == "Link"}]]></xp:this.rendered>
		<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "button5999"}]]></xp:this.id>
		<xp:this.styleClass><![CDATA[#{javascript:compositeData.picklistLinkStyle + " domfindmebutton5999"}]]></xp:this.styleClass><xp:image
			id="image1"
			url="#{javascript:compositeData.picklistLinkImg}"
		>
		</xp:image>
		<xp:eventHandler
			event="onclick"
			submit="true"
			refreshMode="partial"
			disableValidators="true"
		>
			<xp:this.script><![CDATA[dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').show()]]></xp:this.script>
			<xp:this.action><![CDATA[#{javascript:
if(compositeData.type.toString() == "Multi Value"){
var mylist = new java.util.ArrayList()
var thisarray = sessionScope.put("selections", mylist)

var setvalue = ""

if(compositeData.onReturn.toString() == "Set Field Value"){
var scope1 =  sessionScope.get("selections")
setvalue =(compositeData.fieldName)
var value1 = getComponent(setvalue).getValue()
if(compositeData.multiValueSeparator.toString() == ""){
		var sep1 = ","
	}else{
	var sep1 = compositeData.multiValueSeparator
	}
	
if(@Trim(value1) != ""){

	var existingitems = value1.split(sep1)
	var array1 =(existingitems.constructor == Array) ? existingitems : [ existingitems ];
	for(x in array1){
	scope1.add(array1[x])
	}	
	}

}else{
	if(compositeData.onReturn.toString() == "Set Scope Value"){
	var scope1 =  sessionScope.get("selections")
	var computedvalue1 = @Left((compositeData.varName), ".") + ".get('" + @Right((compositeData.varName), ".") +  "')"
	var vector1 = eval(computedvalue1 )	
	for(x in vector1){
		scope1.add(x)
	}	
	}else{
	var computedvalue1  = @Left((compositeData.varName), ".") + ".getItemValue('" + @Right((compositeData.varName), ".") +  "')"
	var computedvalue2:java.util.Vector  = (eval(computedvalue1 ))
			var scope1 =  sessionScope.get("selections")
	for(x in computedvalue2){
	if(@Trim(x) != ""){
	scope1.add(x)
	}				
				}
			}
		}
//	}
}}]]></xp:this.action>
			<xp:this.refreshId><![CDATA[#{javascript:compositeData.dialogID + "panel"}]]></xp:this.refreshId>
		</xp:eventHandler>
	</xp:link>
	<xp:panel id="${javascript:compositeData.dialogID}" dojoType="com.ZetaOne.widget.Dialog"
		style="width:#{javascript:compositeData.dialogWidth};height:#{javascript:compositeData.dialogHeight};display:none">
		<xp:this.dojoAttributes>
			<xp:dojoAttribute name="title"
				value="#{javascript:compositeData.dialogTitle}" />
		</xp:this.dojoAttributes>

		<xp:panel>
			<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "panel"}]]></xp:this.id>
			<xp:table style="width:100.0%" styleClass="#{javascript:compositeData.tableClass}"
				cellpadding="0" cellspacing="0">

				<xp:tr>
					<xp:td styleClass="#{javascript:compositeData.searchBarClass}">
						<xp:table cellpadding="0" cellspacing="0" style="width:100%">
							<xp:tr>
								<xp:td
									style="padding-top:3px;padding-bottom:3px;padding-right:5px;padding-left:5px">
									<xp:panel rendered="#{javascript:compositeData.searchBar}">
										<xp:inputText id="seachbarfield999">
											<xp:this.value><![CDATA[${javascript:var viewnam = "#{" +  (compositeData.searchVar )+ "}"
return viewnam}]]></xp:this.value>
										</xp:inputText>
										&#160;<xp:image
											url="#{javascript:compositeData.clearSearchImg}"
											id="image4"
										>
										<xp:this.rendered><![CDATA[#{javascript:var scopetype = @Left(compositeData.searchVar , ".");
var scopevar = @Right(compositeData.searchVar , ".");

var show1 = scopetype + ".get('" + scopevar + "')"
var show2 = eval(show1)

if(show2 != ""){
true
}else
{
false}

}]]></xp:this.rendered><xp:eventHandler
											event="onclick"
											submit="true"
											refreshMode="partial"
										>
											<xp:this.action><![CDATA[#{javascript:var scopetype = @Left(compositeData.searchVar , ".");
var scopevar = @Right(compositeData.searchVar , ".");
eval(scopetype + ".put('" + scopevar + "', '')" )
}]]></xp:this.action>
											<xp:this.refreshId><![CDATA[#{javascript:compositeData.dialogID + "panel"}]]></xp:this.refreshId>
										</xp:eventHandler></xp:image>
										&#160;&#160;
										<xp:button
											value="#{javascript:compositeData.searchButtonText}"
											id="searchbutton999"
											styleClass="#{javascript:compositeData.searchButtonClass}"
											icon="#{javascript:compositeData.searchButtonImage}">
											<xp:eventHandler
												event="onclick" submit="true" refreshMode="partial"
												disableValidators="true" id="eventHandler1">
												<xp:this.refreshId><![CDATA[${javascript:compositeData.dialogID + "panel"}]]></xp:this.refreshId>
											</xp:eventHandler>
										</xp:button>
									</xp:panel>


									<xp:panel
										style="padding-top:3px;padding-bottom:3px"
										rendered="#{javascript:compositeData.typeAheadBar}">
										<xp:inputText
											id="typeaheadfield999" autocomplete="off">
											<xp:this.value><![CDATA[${javascript:var viewnam = "#{" +  (compositeData.typeAheadVar )+ "}"
return viewnam}]]></xp:this.value>
											<xp:eventHandler
												event="onkeyup" submit="true" refreshMode="partial"
												disableValidators="true" id="eventHandler2">
												<xp:this.refreshId><![CDATA[#{javascript:compositeData.dialogID + "table"}]]></xp:this.refreshId>
											</xp:eventHandler>
										</xp:inputText>
									</xp:panel>
								</xp:td>
								<xp:td valign="top"
									style="padding-top:3px;padding-right:10px">
									
								<xp:pager alwaysCalculateLast="true"
									partialRefresh="true" styleClass="#{javascript:compositeData.pagerStyleClass}">
									<xp:this.for><![CDATA[${javascript:compositeData.dialogID + "table"}]]></xp:this.for>
									<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "pager"}]]></xp:this.id>
									<xp:pagerControl id="pagerControl1"
										type="First"
										styleClass="#{javascript:compositeData.pagerStyleFirst}" />

									<xp:pagerControl id="pagerControl2"
										type="Previous"
										styleClass="#{javascript:compositeData.pagerStylePrevious}" />

									<xp:pagerControl id="pagerControl3"
										type="Status"
										styleClass="#{javascript:compositeData.pagerStyleCurrent}" rendered="#{javascript:compositeData.typeAheadBar == false}">
										<xp:this.value><![CDATA[#{javascript:if(compositeData.typeAheadBar == false){
	"Page {0} of {1} "
}else{"  "
}
}]]></xp:this.value>
									</xp:pagerControl>
									<xp:pagerControl type="Next"
										styleClass="#{javascript:compositeData.pagerStyleNext}">
										<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "nextpagercontrol"}]]></xp:this.id>
									</xp:pagerControl>
									<xp:pagerControl id="pagerControl5"
										type="Last"
										styleClass="#{javascript:compositeData.pagerStyleLast}" />

								</xp:pager></xp:td>
							</xp:tr>

						</xp:table>



					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						
						<xp:dataTable
							rows="#{javascript:compositeData.rowsPerPage}"
							rowClasses="#{javascript:compositeData.rowClass}" cellpadding="0"
							cellspacing="0" partialRefresh="true">


							<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "table"}]]></xp:this.id>

							<xp:this.var><![CDATA[${javascript:compositeData.dialogID + "viewinfo"}]]></xp:this.var>
							<xp:this.value><![CDATA[${javascript:var viewnam = "#{" + compositeData.datasrc + "}"
return viewnam}]]></xp:this.value>
							<xp:column>
								<xp:this.facets>
									<xp:div xp:key="header">
										<xp:td	styleClass="#{javascript:compositeData.headerClass}"/>
										
										<xp:repeat rows="30"
											value="#{javascript:compositeData.viewColumn}"
											var="headervars">
											
											<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "repeat1"}]]></xp:this.id>
											<xp:td
												style="font-weight:bold"
												styleClass="#{javascript:compositeData.headerClass}">
												<xp:text escape="true"
													id="computedField2" style="font-weight:bold">
													<xp:this.value><![CDATA[#{javascript:
var viewnam =  eval(compositeData.datasrc + ".getColumn(" + (headervars + 1) +").getTitle()")

return viewnam
}]]></xp:this.value>
												</xp:text>
											</xp:td>
										</xp:repeat>
									</xp:div>
								</xp:this.facets>

								<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "datacolumn"}]]></xp:this.id>
								<xp:td style="width:#{javascript:compositeData.SelectCellWidth}px">
									<xp:this.rendered><![CDATA[#{javascript:compositeData.type.toString() == "Single Value"}]]></xp:this.rendered>
									<xp:button
										value="#{javascript:compositeData.buttonText}"
										id="button1"
										icon="#{javascript:compositeData.buttonImage}"
										styleClass="#{compositeData.buttonClass}"
										refreshId="#{javascript:compositeData.refreshID}"
									>
										<xp:this.rendered><![CDATA[#{javascript:compositeData.selectWith.toString() != "Link"}]]></xp:this.rendered>
										<xp:eventHandler
											event="onclick"
											submit="true"
											refreshMode="partial"
											disableValidators="true"
											refreshId="#{javascript:compositeData.refreshID}"
											id="eventHandler3"
										>
											<xp:this.action><![CDATA[#{javascript:var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
}else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

var setvalue = ""
if(compositeData.onReturn.toString() == "Set Field Value"){
setvalue =(compositeData.fieldName)
getComponent(setvalue).setValue(valueselected.toString())
if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}
}else{
	if(compositeData.onReturn.toString() == "Set Scope Value"){
	var test = @Left((compositeData.varName), ".") + ".put('" + @Right((compositeData.varName), ".") + "','"  + valueselected +  "')"
	eval(test)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}

	}else{
		var test = @Left((compositeData.varName), ".") + ".replaceItemValue('" + @Right((compositeData.varName), ".") + "','"  + valueselected +  "')"
	eval(test)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}

	}
	
	}}]]></xp:this.action>
											<xp:this.script><![CDATA[

dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').hide();

//]]></xp:this.script>
										</xp:eventHandler>
									</xp:button>
									<xp:link escape="true"
										text="#{javascript:compositeData.linkText}" id="link9992"
										styleClass="#{javascript:compositeData.linkClass}">
										<xp:this.rendered><![CDATA[#{javascript:compositeData.selectWith.toString() == "Link"}]]></xp:this.rendered>
										<xp:image id="image2"
											url="#{javascript:compositeData.linkImg}">
										</xp:image>
										<xp:eventHandler
											event="onclick"
											submit="true"
											refreshMode="partial"
											disableValidators="true"
											refreshId="#{javascript:compositeData.refreshID}"
											id="eventHandler8"
										>
											<xp:this.action><![CDATA[#{javascript:var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
}else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

var setvalue = ""
if(compositeData.onReturn.toString() == "Set Field Value"){
setvalue =(compositeData.fieldName)
getComponent(setvalue).setValue(valueselected.toString())
if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}
}else{
	if(compositeData.onReturn.toString() == "Set Scope Value"){
	var test = @Left((compositeData.varName), ".") + ".put('" + @Right((compositeData.varName), ".") + "','"  + valueselected +  "')"
	eval(test)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}

	}else{
		var test = @Left((compositeData.varName), ".") + ".replaceItemValue('" + @Right((compositeData.varName), ".") + "','"  + valueselected +  "')"
	eval(test)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '("' + valueselected + '")')
}

	}
	
	}}]]></xp:this.action>
											<xp:this.script><![CDATA[dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').hide()]]></xp:this.script>
											<xp:this.onStart><![CDATA[

 ]]></xp:this.onStart>
										</xp:eventHandler>
									</xp:link>
								</xp:td>
								<xp:td style="width:#{javascript:compositeData.SelectCellWidth}px">
									<xp:this.rendered><![CDATA[#{javascript:compositeData.type.toString() == "Multi Value"}]]></xp:this.rendered>
									<xp:button id="button4"
										styleClass="#{javascript:compositeData.multiSelectButtonClass}">

										<xp:this.value><![CDATA[#{javascript:var myArray = sessionScope.get("selections");

var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

//If it's not already in the Array then add it.
if(myArray != null){
	if (!myArray.contains(valueselected)) {
compositeData.multiSelectButtonAddText}else{
	compositeData.multiSelectButtonRemoveText
}
}else{
	compositeData.multiSelectButtonAddText
}

}]]></xp:this.value>
										<xp:this.icon><![CDATA[#{javascript:var myArray = sessionScope.get("selections");
var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

//If it's not already in the Array then add it.
if(myArray != null){
	if (!myArray.contains(valueselected)) {
compositeData.multiSelectButtonAddImg}else{
	compositeData.multiSelectButtonRemoveImg
}
}else{
	compositeData.multiSelectButtonAddImg
}
}]]></xp:this.icon>
										<xp:this.rendered><![CDATA[#{javascript:compositeData.selectWith.toString() != "Link"}]]></xp:this.rendered>
										<xp:eventHandler event="onclick"
											submit="true" refreshMode="partial" disableValidators="true"
											id="eventHandler6" refreshId="button4">

											<xp:this.action><![CDATA[#{javascript:var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

var myArray = sessionScope.get("selections");

//If it's not already in the Array then add it.
if (!myArray.contains(valueselected)) {
myArray.add(valueselected);
}else{
	myArray.remove(valueselected)
}

}]]></xp:this.action>



										</xp:eventHandler>
									</xp:button>
									<xp:link escape="true" id="link1"
										styleClass="#{javascript:compositeData.multiSelectLinkClass}">
										<xp:this.text><![CDATA[#{javascript:var myArray = sessionScope.get("selections");

var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

//If it's not already in the Array then add it.
if(myArray != null){
	if (!myArray.contains(valueselected)) {
compositeData.multiSelectLinkAddText}else{
	compositeData.multiSelectLinkRemoveText
}
}else{
	compositeData.multiSelectLinkAddText
}
}]]></xp:this.text>
										<xp:this.rendered><![CDATA[#{javascript:compositeData.selectWith.toString() == "Link"}]]></xp:this.rendered>
										<xp:image id="image3">
											<xp:this.url><![CDATA[#{javascript:var myArray = sessionScope.get("selections");
var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

//If it's not already in the Array then add it.
if(myArray != null){
	if (!myArray.contains(valueselected)) {
compositeData.multiSelectLinkAddImg}else{
	compositeData.multiSelectLinkRemoveImg
}
}else{
	compositeData.multiSelectLinkAddImg
}}]]></xp:this.url>
										</xp:image>
										<xp:eventHandler event="onclick"
											submit="true" refreshMode="partial" disableValidators="true"
											id="eventHandler7" refreshId="link1">

											<xp:this.action><![CDATA[#{javascript:var valueselected =  ''
if(compositeData.select.toString() == "Column"){
valueselected = eval(compositeData.dialogID + 'viewinfo.getColumnValues()['+ compositeData.selectColumn + ']')
	
} else if (compositeData.select.toString() == "UNID"){ 
        valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getUniversalID()') 
} else{
valueselected = eval(compositeData.dialogID + 'viewinfo.getDocument().getItemValueString(' + compositeData.selectField +')')

}

var myArray = sessionScope.get("selections");

//If it's not already in the Array then add it.
if (!myArray.contains(valueselected)) {
myArray.add(valueselected);
}else{
	myArray.remove(valueselected)
}

}]]></xp:this.action>



										</xp:eventHandler>
									</xp:link>
								</xp:td>
								<xp:repeat rows="30"
									value="#{javascript:compositeData.viewColumn}">
									<xp:this.var><![CDATA[${javascript:compositeData.dialogID + "columns1"}]]></xp:this.var>
									<xp:this.id><![CDATA[${javascript:compositeData.dialogID + "repeat2"}]]></xp:this.id>
									<xp:td>
										<xp:text escape="true"
											id="computedField1">
											<xp:this.value><![CDATA[#{javascript:eval(  compositeData.dialogID +'viewinfo.getColumnValues()['+ compositeData.dialogID + 'columns1' +']')}]]></xp:this.value>
										</xp:text>
									</xp:td>
								</xp:repeat>
							</xp:column>
						</xp:dataTable>
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td
						styleClass="#{javascript:compositeData.bottomBarClass}"
						style="padding-left:5px;padding-right:5px">
						<xp:button
							value="#{javascript:compositeData.finishButtonText}"
							id="button3999"
							icon="#{javascript:compositeData.finishButtonImg}"
							styleClass="#{javascript:compositeData.finishButtonClass}"
							refreshId="#{javascript:compositeData.refreshID}">

							<xp:this.rendered><![CDATA[#{javascript:compositeData.type.toString() == "Multi Value"}]]></xp:this.rendered>
							<xp:eventHandler
								event="onclick"
								submit="true"
								disableValidators="true"
								id="eventHandler5"
								refreshId="#{javascript:compositeData.refreshID}"
								refreshMode="partial"
							>
								<xp:this.script><![CDATA[dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').hide()]]></xp:this.script>
								<xp:this.action><![CDATA[#{javascript:


var setvalue = ""
if(compositeData.onReturn.toString() == "Set Field Value"){
	//set field value
	if(@Trim(compositeData.multiValueSeparator) == ""){
		var sep1 = ","
	}else{
		var sep1 = compositeData.multiValueSeparator
	}
setvalue =compositeData.fieldName
getComponent(setvalue).setValue(sessionScope.get("selections").join(sep1))
var values1 = sessionScope.get("selections")
var values2 = new java.util.Vector() 
	for(x in values1){
		values2.add(x)
	}
if(@Trim(compositeData.ssjsSelectFunction) != ""){
	eval(compositeData.ssjsSelectFunction + '(' + "values2.toArray()" + ')')
}

}else{
	//setscopevalue
	var values1 = sessionScope.get("selections")
	if(compositeData.onReturn.toString() == "Set Scope Value"){
	var values2 = new java.util.Vector() 
	for(x in values1){
		values2.add(x)
	}
	
	var test = @Left((compositeData.varName), ".") + ".put('" + @Right(compositeData.varName, ".") + "',"  +'values2' +  ")"
	eval(test)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
		eval(compositeData.ssjsSelectFunction + '(' + "values2.toArray()" + ')')
	}
	}else{
				//set document value
	var values1 = sessionScope.get("selections")
	var values2 = new java.util.Vector() 
	for(x in values1){
		print(x)
		values2.add(x)
	}
	
	//if(@Trim(compositeData.multiValueSeparator) == ""){
	//	var sep1 = ","
	//}else{
	//	var sep1 = compositeData.multiValueSeparator
	//}
	//var finalvalue = values2.toArray().join(sep1)
	var finalvalue = values2
	var replaceitem1 = @Left((compositeData.varName), ".") + ".replaceItemValue('" + @Right((compositeData.varName), ".") + "',"   + 'finalvalue' +   ")"
	eval(replaceitem1)
	if(@Trim(compositeData.ssjsSelectFunction) != ""){
		eval(compositeData.ssjsSelectFunction + '(' + "values2.toArray()" + ')')
	}
	}
	
	}
sessionScope.put("selections", "")}]]></xp:this.action>
								<xp:this.onStart><![CDATA[


 ]]></xp:this.onStart>
							</xp:eventHandler>
						</xp:button>
						&#160;&#160;
						<xp:button
							value="#{javascript:compositeData.cancelButtonText}"
							id="cancelbutton999"
							icon="#{javascript:compositeData.cancelButtonImg}"
							styleClass="#{javascript:compositeData.cancelButtonClass}">

							<xp:eventHandler event="onclick"
								submit="false" disableValidators="true" id="eventHandler4">


								<xp:this.script><![CDATA[dijit.byId('#{javascript:getClientId(compositeData.dialogID)}').hide()]]></xp:this.script>

							</xp:eventHandler>
						</xp:button>
						
							
						</xp:td>
				</xp:tr>
			</xp:table>
		</xp:panel>

	</xp:panel>

	<xp:eventHandler event="onClientLoad" submit="true"
		refreshMode="norefresh"/></xp:view>